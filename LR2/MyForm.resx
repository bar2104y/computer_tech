<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="directorySearcher1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <metadata name="$this.TrayHeight" type="System.Int32, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>25</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        RwBISEgASUlJAExMTABPT08AUFBQAFFRUQBTU1MAVFRUAFdXVwBZWVkAWlpaAF1dXQBfX18AYmFhAGNj
        YwBnZ2cAaGhoAGxsbABtbW0AcG9vAHFxcQB0dHQAdnZ2AHd3dwB6enoAe3p6AH19fQCCgoIAg4KCAIOD
        gwCFhYUAh4eHAIiHhwCIiIgAiYmJAIuLiwCNjY0Aj4+PAJCQkACRkZEAk5OTAJWVlQCWlZUAl5eXAJqa
        mgCbmpoAm5ubAJ6engCfn58AoKCgAKGhoQCjo6MApKSkAKampgCnp6cAqKioAKqqqgCsrKwArq6uAK+v
        rwCxsbEAsrKyALOzswC0s7MAtLS0ALW1tQC3trYAt7e3ALi4uAC8vLwAvb29AL6+vgC/v78AwMDAAMPD
        wwDExMQAxcXFAMfHxwDIyMgAycnJAMrKygDMy8sAzMzMAM3NzQDOzc0Az8/PANDQ0ADR0dEA0tLSANTU
        1ADV1dUA2NjYANra2gDc3NwA3d3dAN7e3gDf398A4ODgAOHh4QDi4uIA4+PjAOTk5ADl5eUA5ubmAOfn
        5wDp6ekA6urqAOzs7ADt7e0A7u7uAPDw8ADx8fEA8vLyAPPz8wD09PQA9fX1APf39wD4+PgA+fn5APr6
        +gD7+/sA/Pz8AP39/QD+/v4A////AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEDAAMCAAAAAAMDAQMBAAAAAAAAAAAA
        AAAAAAAAAAAAAAIRAAUHAAABAAABAAAAAAAAAAAAAAAAAAAAAAAAAQALaKxafy8ABwBHOnuAFQACAAAA
        AAAAAAAAAAAAAAACAB6ks6E+FxoBBTx9s14BAAEAAAAAAAAAAAAAAAAAAAMAP2EyITBlYEVBIAAiBQAA
        AAAAAAAAAAAAAAAAAAAAAQA4LgBSrrCzs7KzfwwAAgAAAAAAAAAAAAAAAAAAAAEAFRkCAFyzr7CwrrN4
        AAEAAAAAAAAAAAAAAAABAQQCAgAxGwAAMbOys7KzsywAAgAAAAAAAAAAAAAAAwEBBQYCACkVABEMj7Ox
        sLOFAAEAAAAAAAAAAAAAAAcZJDUmBQEHJgEACRh/s7Cvs2oABAAAAAAAAAAAAAEBCw4qMiAGEQgFAgIA
        MYyzsa+zbwADAAAAAAAAAAAAAgEAH0NACjqCNgAFBABarbKysLODAAEAAAAAAAAAAAADEyNMgVtUco1N
        EAYFAG6zsbOvs2sAAwAAAAAAAAAAABY/XV9yeqeSk1k1HQMpmrGys6+zbAAEAgAAAAAAAAAAK2Kis6iq
        s7CzeCgVRpmtsLOzsLN0AwIAAAAAAAAAAABgaI2YnK+zsLOXFRKPs7Cys7Ows3wSOCwDAAAAAAAAAFg9
        c4OYs7Oys6tAI5GzsbKzs7CzgwEQOSUAAQAAAAAAVImpsLOzs7Ozs1UembOxs7OzsbOPBh4AAQAAAAAA
        AABvrbOysrOzs7KzkXyzr62us7Oxs5QCDwYAAAAAAAAAAKSxsrOzs7OzsbOKQlFLpa+zs7CzhgADAQAA
        AAAAAAAAs7Kys7OzsrCvs50ZAABfnrOysLN9AAMBAAAAAAAAAACdpa+zs7Ozs7Osg3RkRCRMs7Cvs3AA
        BwIAAAAAAAAAAJOvs7Oys593V0pQc3eYoYCqs7CzZ1RJGQABAAAAAAAArbOzs7CzeVB2rZdtibOxsrKz
        s7GtnWAtAAIAAAAAAACwsrOzs7OwsLKzi3GIs7CusLOzs6yolnEqAQIAAAAAALCys7Ozs7OysbFTdVqz
        srOzs7Oznamfm18nBAIAAAAApquzs7Ozs7Ozs2WIYbOqpLOysLOGmKuHTjMcCgAAAACjprKzs7Ozs7Oz
        srKws5eVs7Kss11+s5lYMDckAAEAAKissrOzs7Ozs7Oys7KzsKyzsrKzn6izq4dIRioAAQAAkKixs7Oz
        s7Ozs7Ozs7OzpaazjmaOs66ooXhAFhAFAABOjauzs7Ozs7Ozs7Ozs7Kzl2pWd6Kwi5yxdCEUNA0AAEVP
        oLOys7Ozs7Ozs7Ozs7Oxmqazs7BphK5jBg87FQABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=
</value>
  </data>
</root>